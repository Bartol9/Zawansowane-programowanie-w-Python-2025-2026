## zadanie 1

import math

L1 = float(input("Podaj liczbę a:"))
L2 = float(input("Podaj liczbę b:"))
print("suma:", float(L1 + L2))
print("różnica:", float(L1 - L2))
print("iloczyn:", float(L1 * L2))
print("iloraz", float(L1 / L2))
print(" √L1 + L2", math.sqrt(L1 + L2))

##zadanie 2

import random

# Wylosuj liczbę od 1 do 5
secret_number = random.randint(1, 5)

#Pętla gry, która trwa do momentu odgadnięcia liczby
while True:
    try:
        guess_str = input("Zgadnij liczbę od 1 do 5: ")
        user_guess = int(guess_str)

        if user_guess < 1 or user_guess > 5:
            print("Podaj liczbę w zakresie od 1 do 5.")
        elif user_guess == secret_number:
            print("Gratulacje! Zgadłeś!")
            break
        else:
            print("Przykro mi, to zła liczba. Spróbuj ponownie.")

    except ValueError:
        print("To nie jest poprawna liczba. Podaj liczbę całkowitą.")


##zadanie 3

import random
nums = [random.randint(2, 8) for _ in range(10)]
print("Początkowa lista:", nums)

# a) wypisanie wszystkich elementów listy wraz z indeksami
print("\n[a] Elementy listy z indeksami:")
for i, val in enumerate(nums):
    print(f"Indeks {i} -> {val}")

# b) usuwanie z listy nums liczb nieparzystych
nums_b = [x for x in nums if x % 2 == 0]
print("\n[b] Lista po usunięciu nieparzystych:", nums_b)

# c) zamiana wartości elementów nieparzystych na ich indeksy
nums_c = nums[:]  # kopia oryginalnej listy
for i, val in enumerate(nums_c):
    if val % 2 != 0:   # jeśli nieparzysta
        nums_c[i] = i
print("\n[c] Lista po zamianie nieparzystych na indeksy:", nums_c)

# d) usuwanie wszystkich wystąpień liczb 2 i 3
nums_d = [x for x in nums if x not in (2, 3)]
print("\n[d] Lista po usunięciu wszystkich 2 i 3:", nums_d)

# e) po każdej liczbie podzielnej przez 3 wstaw nowy element 15
nums_e = []
for x in nums:
    nums_e.append(x)
    if x % 3 == 0:
        nums_e.append(15)
print("\n[e] Lista po wstawieniu 15 po elementach podzielnych przez 3:", nums_e)


##zadanie 4

